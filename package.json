{
  "name": "microbun",
  "version": "1.0.0",
  "description": "A flexible, extensible microservice boilerplate built with Bun/Node.js, Express, and TypeScript",
  "private": true,
  "type": "module",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/microbun.git"
  },
  "keywords": [
    "microservices",
    "bun",
    "nodejs",
    "express",
    "typescript",
    "boilerplate",
    "event-driven"
  ],
  "author": "",
  "license": "MIT",
  "workspaces": [
    "apps/*"
  ],
  "scripts": {
    "dev": "bun run dev:services & bun run --cwd apps/api start:dev",
    "dev:services": "concurrently --names \"Auth,Payments,Business,Wallet,Notifications,Compliance,ServiceRegistry\" \"bun run --cwd apps/auth start:dev\" \"bun run --cwd apps/payments start:dev\" \"bun run --cwd apps/business start:dev\" \"bun run --cwd apps/wallet start:dev\" \"bun run --cwd apps/notifications start:dev\" \"bun run --cwd apps/compliance start:dev\" \"bun run --cwd apps/service-registry start:dev\"",
    "build": "bun run build:shared && bun run build:apps",
    "build:shared": "if [ -f \"shared/index.ts\" ]; then bun run --cwd shared build; else echo \"Skipping shared build: index.ts not found\"; fi",
    "build:apps": "for dir in apps/*; do if [ -d \"$dir\" ] && [ -f \"$dir/package.json\" ]; then echo \"Building $(basename $dir)...\" && bun run --cwd $dir build --external sqlite3 --external better-sqlite3 --external mysql --external mysql2 --external oracledb --external tedious --external pg-query-stream --external aws-sdk --external mock-aws-s3 --external nock || echo \"Failed to build $(basename $dir)\"; fi; done",
    "start": "bun run start:api & bun run start:services",
    "start:api": "bun run --cwd apps/api start",
    "start:services": "concurrently \"bun run --cwd apps/service-registry start\" \"bun run --cwd apps/payments start\" \"bun run --cwd apps/business start\" \"bun run --cwd apps/wallet start\" \"bun run --cwd apps/notifications start\" \"bun run --cwd apps/compliance start\" \"bun run --cwd apps/auth start\"",
    "test": "bun test",
    "lint": "eslint \"{apps,shared}/**/*.{ts,tsx}\"",
    "format": "prettier --write \"{apps,shared}/**/*.{ts,tsx,json,md}\"",
    "lint:fix": "eslint . --fix ",
    "typecheck": "tsc --noEmit",
    "migrate:create": "bun run --cwd database migrate:create",
    "migrate:up": "bun run --cwd database migrate:up",
    "migrate:down": "bun run --cwd database migrate:down",
    "migrate:all": "for dir in apps/*; do if [ -d \"$dir\" ] && [ -f \"$dir/knexfile.cjs\" ]; then echo \"Running migrations for $(basename $dir)...\" && bunx knex migrate:latest --knexfile=$dir/knexfile.cjs; fi; done",
    "seed:all": "for dir in apps/*; do if [ -d \"$dir\" ] && [ -f \"$dir/knexfile.cjs\" ]; then echo \"Running migrations for $(basename $dir)...\" && bunx knex seed:run --knexfile=$dir/knexfile.cjs; fi; done",
    "docker:dev": "docker-compose -f infrastructure/docker/development/docker-compose.yml up",
    "docker:prod": "docker-compose -f infrastructure/docker/production/docker-compose.yml up -d",
    "install:select": "sh -c 'selected=$(ls apps | fzf -m); for app in $selected; do bun add \"$1\" --cwd apps/$app; done' --",
    "db": "sh -c 'selected=$(ls apps | fzf -m); for app in $selected; do bunx knex \"$@\" --knexfile=apps/$app/knexfile.cjs; done' --"
  },
  "devDependencies": {
    "@types/amqplib": "^0.10.4",
    "@types/node": "^20.11.19",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^7.0.1",
    "@typescript-eslint/parser": "^7.0.1",
    "bun-types": "latest",
    "concurrently": "^8.2.2",
    "globals": "^16.0.0",
    "nodemon": "^3.0.3",
    "rimraf": "^5.0.5",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.787.0",
    "@aws-sdk/s3-request-presigner": "^3.787.0",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.23.0",
    "@types/bun": "^1.2.10",
    "@types/express": "^5.0.1",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "amqplib": "^0.10.3",
    "axios": "^1.8.4",
    "country-currency-utils": "^3.0.1",
    "cryptocurrency-icons": "^0.18.1",
    "dotenv": "^16.5.0",
    "ejs": "^3.1.10",
    "eslint": "^9.23.0",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-prettier": "^5.2.3",
    "express-rate-limit": "^7.5.0",
    "generic-pool": "^3.9.0",
    "inversify": "^7.0.0-alpha.5",
    "ioredis": "^5.6.0",
    "knex": "^3.1.0",
    "moment": "^2.30.1",
    "multer": "^1.4.5-lts.2",
    "objection": "^3.1.5",
    "pg-connection-string": "^2.7.0",
    "prettier": "^3.5.3",
    "reflect-metadata": "^0.2.2",
    "sqlite3": "^5.1.7",
    "stack-trace": "^1.0.0-pre2",
    "typescript-eslint": "^8.27.0",
    "uuid": "^9.0.1"
  },
  "engines": {
    "bun": ">=1.0.25"
  }
}